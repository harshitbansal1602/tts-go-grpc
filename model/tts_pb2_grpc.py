# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import tts_pb2 as tts__pb2


class BridgeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSpeechStream = channel.unary_stream(
                '/bridge.Bridge/GetSpeechStream',
                request_serializer=tts__pb2.Text.SerializeToString,
                response_deserializer=tts__pb2.Speech.FromString,
                )
        self.GetSpeech = channel.unary_unary(
                '/bridge.Bridge/GetSpeech',
                request_serializer=tts__pb2.Text.SerializeToString,
                response_deserializer=tts__pb2.Speech.FromString,
                )
        self.GetPartTextToSpeech = channel.stream_stream(
                '/bridge.Bridge/GetPartTextToSpeech',
                request_serializer=tts__pb2.Text.SerializeToString,
                response_deserializer=tts__pb2.Speech.FromString,
                )
        self.DownloadBarkModel = channel.unary_unary(
                '/bridge.Bridge/DownloadBarkModel',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class BridgeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSpeechStream(self, request, context):
        """Get full text to speech with speech streamed in parts.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpeech(self, request, context):
        """Get text to speech of the whole text in one go.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartTextToSpeech(self, request_iterator, context):
        """Stream text with appropriate part number to get speech streamed back.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadBarkModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BridgeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSpeechStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSpeechStream,
                    request_deserializer=tts__pb2.Text.FromString,
                    response_serializer=tts__pb2.Speech.SerializeToString,
            ),
            'GetSpeech': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpeech,
                    request_deserializer=tts__pb2.Text.FromString,
                    response_serializer=tts__pb2.Speech.SerializeToString,
            ),
            'GetPartTextToSpeech': grpc.stream_stream_rpc_method_handler(
                    servicer.GetPartTextToSpeech,
                    request_deserializer=tts__pb2.Text.FromString,
                    response_serializer=tts__pb2.Speech.SerializeToString,
            ),
            'DownloadBarkModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadBarkModel,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bridge.Bridge', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bridge(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSpeechStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bridge.Bridge/GetSpeechStream',
            tts__pb2.Text.SerializeToString,
            tts__pb2.Speech.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bridge.Bridge/GetSpeech',
            tts__pb2.Text.SerializeToString,
            tts__pb2.Speech.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartTextToSpeech(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/bridge.Bridge/GetPartTextToSpeech',
            tts__pb2.Text.SerializeToString,
            tts__pb2.Speech.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadBarkModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bridge.Bridge/DownloadBarkModel',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
